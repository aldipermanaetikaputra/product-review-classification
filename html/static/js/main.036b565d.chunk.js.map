{"version":3,"sources":["images/accent-center.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["baseURL","window","location","origin","toString","getReviewClassification","text","a","axios","get","encodeURIComponent","trim","result","status","Error","data","getRandomReview","total","App","useForm","mode","register","handleSubmit","reset","setValue","isValid","formState","React","useState","info","setInfo","loading","setLoading","setResult","randoms","setRandoms","useEffect","then","texts","setInterval","onSumbit","review","setReview","onRandom","disabled","className","style","backgroundImage","accentCenter","backgroundBlendMode","backgroundPositionX","backgroundRepeat","content","top","left","right","bottom","marginRight","transform","padding","background","border","overlay","isOpen","onRequestClose","onClick","type","data-modal-toggle","fill","viewBox","xmlns","fill-rule","d","clip-rule","onSubmit","validate","split","length","name","id","autoComplete","placeholder","undefined","map","Math","round","classification","original","processed","tokenized","join","href","target","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.036b565d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/accent-center.b893b92b.svg\";","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Modal from \"react-modal\";\nimport { FaRandom, FaThumbsDown, FaThumbsUp, FaTimes } from \"react-icons/fa\";\nimport { IoSadSharp } from \"react-icons/io5\";\nimport { HiInformationCircle } from \"react-icons/hi\";\nimport { GoArrowDown } from \"react-icons/go\";\nimport { RiGithubFill } from \"react-icons/ri\";\nimport { useForm } from \"react-hook-form\";\nimport accentCenter from \"./images/accent-center.svg\";\nimport \"./App.css\";\n\ninterface Form {\n  review: string;\n}\n\ninterface Result {\n  result: \"dilemma\" | \"positive\" | \"negative\" | \"uncoverage\";\n  original: string;\n  processed: string;\n  tokenized: number[];\n  classification: number[];\n}\n\nconst baseURL = window.location.origin.toString();\n\nconst getReviewClassification = async (text: string) => {\n  const result = await axios.get(\n    baseURL + \"/review?text=\" + encodeURIComponent(text.trim())\n  );\n\n  if (result.status !== 200) {\n    throw new Error(\"server error\");\n  }\n\n  return result.data as Result;\n};\n\nconst getRandomReview = async (total: number) => {\n  const result = await axios.get(baseURL + \"/random?total=\" + total);\n\n  if (result.status !== 200) {\n    throw new Error(\"server error\");\n  }\n\n  return result.data as string[];\n};\n\nfunction App() {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    setValue,\n    formState: { isValid },\n  } = useForm<Form>({ mode: \"onChange\" });\n  const [info, setInfo] = React.useState(false);\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState<Result>();\n  const [randoms, setRandoms] = useState<string[]>();\n\n  useEffect(() => {\n    getRandomReview(3).then((texts) => setRandoms(texts));\n    setInterval(\n      () => getRandomReview(3).then((texts) => setRandoms(texts)),\n      5000\n    );\n  }, []);\n\n  const onSumbit = async (data: Form) => {\n    if (data.review) {\n      setLoading(true);\n\n      const result = await getReviewClassification(data.review);\n\n      setResult(result);\n      setLoading(false);\n    }\n  };\n\n  const onClear = () => {\n    reset();\n    setResult(undefined);\n    setLoading(false);\n  };\n\n  const setReview = async (text: string) => {\n    setValue(\"review\", text);\n    handleSubmit(onSumbit)();\n  };\n\n  const onRandom = async () => {\n    const randoms = await getRandomReview(1);\n    setReview(randoms[0]);\n  };\n\n  const disabled = loading || !!result;\n\n  const customStyles = {\n    content: {\n      top: \"50%\",\n      left: \"50%\",\n      right: \"auto\",\n      bottom: \"auto\",\n      marginRight: \"-50%\",\n      transform: \"translate(-50%, -50%)\",\n      padding: 0,\n      background: \"transparent\",\n      border: 0,\n    },\n    overlay: {\n      background: \"rgba(0,0,0,0.5)\",\n    },\n  };\n\n  return (\n    <div\n      className=\"w-full min-h-screen text-center text-white relative\"\n      style={{\n        backgroundImage: `url(${accentCenter}), linear-gradient(249.77deg,#0094ff -1.99%,#007dff 43.52%,#026ce8 95.86%)`,\n        backgroundBlendMode: \"lighten\",\n        backgroundPositionX: \"center\",\n        backgroundRepeat: \"no-repeat\",\n      }}\n    >\n      <Modal\n        style={customStyles}\n        isOpen={info}\n        onRequestClose={() => setInfo(false)}\n      >\n        <div className=\"relative w-full max-w-2xl px-4 h-full md:h-auto bg-transparent\">\n          <div className=\"bg-white rounded-lg shadow relative dark:bg-gray-700\">\n            <div className=\"flex items-start justify-between p-5 border-b rounded-t dark:border-gray-600\">\n              <h3 className=\"text-gray-900 text-xl lg:text-2xl font-semibold dark:text-white\">\n                Informasi & Batasan\n              </h3>\n              <button\n                onClick={() => setInfo(false)}\n                type=\"button\"\n                className=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-600 dark:hover:text-white\"\n                data-modal-toggle=\"default-modal\"\n              >\n                <svg\n                  className=\"w-5 h-5\"\n                  fill=\"currentColor\"\n                  viewBox=\"0 0 20 20\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    fill-rule=\"evenodd\"\n                    d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n                    clip-rule=\"evenodd\"\n                  ></path>\n                </svg>\n              </button>\n            </div>\n\n            <div className=\"px-6 py-6 space-y-6\">\n              <p className=\"text-gray-500 text-base leading-relaxed dark:text-gray-400\">\n                Product Review Classification adalah tools untuk menganalisis\n                sentimen pada ulasan produk yang anda input, ada 2 keluaran\n                utama yang diharapkan yaitu <b>POSITIF</b> dan <b>NEGATIF</b>{\" \"}\n                yang menandakan kecerendungan ulasan anda.\n              </p>\n              <p className=\"text-gray-500 text-base leading-relaxed dark:text-gray-400\">\n                Klasifikasi akan menampilkan hasil <b>TIDAK DIKETAHUI</b> jika\n                kata pada ulasan yang diinput <b>lebih dari 40%</b> (\n                <u>ambang batas yang ditetapkan</u>) tidak dikenali oleh program\n                atau jika hasil klasifikasi <b>tidak lebih dari 60%</b> (\n                <u>ambang batas yang ditetapkan</u>\n                ).\n              </p>\n              <p className=\"text-gray-500 text-base leading-relaxed dark:text-gray-400\">\n                <div className=\"text-lg font-bold underline\">BATASAN: </div>{\" \"}\n                Model yang dibangun pada tools ini ditujukan untuk{\" \"}\n                <b>ulasan produk FMCG (Fast-Moving Consumer Goods)</b> sehingga\n                ulasan produk yang dianalisis hanya berfokus pada produk FMCG.\n                Data latih yang digunakan mengambil sample ulasan produk yang\n                dijual oleh Official Store Unilever & Nestle pada marketplace\n                Tokopedia.\n              </p>\n              <p className=\"text-gray-500 text-base leading-relaxed dark:text-gray-400\">\n                Tools ini dibuat oleh Kelompok 1 (ITS-01) untuk memenuhi tugas\n                besar{\" \"}\n                <b>Microcredential Certification - Associate Data Scientst</b>{\" \"}\n                oleh Kemenristekdikti.\n              </p>\n            </div>\n          </div>\n        </div>\n      </Modal>\n      <div className=\"flex flex-col min-h-screen\">\n        <div className=\"flex-1 py-36 px-6\">\n          <h1 className=\"text-2xl md:text-5xl font-semibold\">\n            Product Review Classification\n          </h1>\n          <div className=\"md:text-lg\">\n            Prediksi sentimen ulasan produk anda disini hanya dengan sekali\n            klik.\n          </div>\n          <form onSubmit={handleSubmit(onSumbit)}>\n            <div className=\"w-10/12 sm:w-8/12 lg:w-6/12 mx-auto my-6 md:my-12\">\n              <div className=\"md:flex flex-row justify-between items-center md:space-x-2 space-y-2 md:space-y-0\">\n                <div\n                  className={`${\n                    disabled ? \"opacity-80\" : \"opacity-100\"\n                  } relative flex-1 text-black rounded-full shadow-md py-4 px-6 bg-white text-center mx-auto flex flex-row items-center`}\n                >\n                  <input\n                    {...register(\"review\", {\n                      validate: (text: string) =>\n                        text.trim().split(\" \").length >= 3,\n                    })}\n                    type=\"text\"\n                    disabled={disabled}\n                    name=\"review\"\n                    id=\"review\"\n                    autoComplete=\"off\"\n                    className=\"w-full bg-transparent h-full appearance-none focus:outline-none focus:ring-0 border-0 text-lg\"\n                    placeholder=\"Ketik review anda minimal 3 kata\"\n                  />\n                  {!!result ? (\n                    <button type=\"button\" onClick={onClear}>\n                      <FaTimes className=\"text-2xl text-red-600\" />\n                    </button>\n                  ) : (\n                    <button\n                      type=\"button\"\n                      onClick={onRandom}\n                      disabled={disabled}\n                    >\n                      <FaRandom className=\"text-2xl text-gray-500 hover:text-gray-800 transition-colors ease-in duration-400\" />\n                    </button>\n                  )}\n                </div>\n                <button\n                  disabled={disabled || !isValid}\n                  type=\"submit\"\n                  className=\"disabled:opacity-80 text-center font-semibold w-full md:w-40 py-5 px-6 text-lg bg-yellow-500 text-white rounded-full shadow-lg\"\n                >\n                  {loading ? \"Memproses...\" : \"Cek Review\"}\n                </button>\n              </div>\n              {randoms && (\n                <div className=\"mt-3 md:flex md:flex-row text-xs md:px-6 space-x-2 max-w-full overflow-hidden\">\n                  <div className=\"md:w-28\">Random Review: </div>\n                  {randoms.map((text) => (\n                    <button\n                      type=\"button\"\n                      onClick={() => setReview(text)}\n                      className=\"underline flex-1 w-full truncate\"\n                    >\n                      {text}\n                    </button>\n                  ))}\n                </div>\n              )}\n              {result && (\n                <div className=\"mt-8\">\n                  {(result.result === \"positive\" && (\n                    <div>\n                      <div className=\"text-3xl inline-flex space-x-4 items-center animate-bounce\">\n                        <div className=\"text-2xl\">Hasil :</div>\n                        <div className=\"font-semibold flex space-x-2 text-green-200\">\n                          <FaThumbsUp />\n                          <span>POSITIF</span>\n                        </div>\n                      </div>\n                      <div className=\" text-sm italic text-gray-200\">\n                        Review yang anda masukkan cenderung{\" \"}\n                        <b>\n                          {Math.round(result.classification[1] * 100)}% positif\n                        </b>\n                      </div>\n                    </div>\n                  )) ||\n                    (result.result === \"negative\" && (\n                      <div>\n                        <div className=\"text-3xl inline-flex space-x-4 items-center animate-bounce\">\n                          <div className=\"text-2xl\">Hasil :</div>\n                          <div className=\"font-semibold flex space-x-2 text-red-200\">\n                            <FaThumbsDown />\n                            <span>NEGATIF</span>\n                          </div>\n                        </div>\n                        <div className=\" text-sm italic text-gray-200\">\n                          ulasan yang anda masukkan cenderung{\" \"}\n                          <b>\n                            {Math.round(result.classification[0] * 100)}%\n                            negatif\n                          </b>\n                        </div>\n                      </div>\n                    )) ||\n                    (result.result === \"dilemma\" && (\n                      <div>\n                        <div className=\"text-3xl inline-flex space-x-4 items-center animate-bounce\">\n                          <div className=\"text-2xl\">Hasil :</div>\n                          <div className=\"font-semibold flex space-x-2 text-yellow-200\">\n                            <IoSadSharp />\n                            <span>TIDAK DIKETAHUI</span>\n                          </div>\n                        </div>\n                        <div className=\" text-sm italic text-gray-200\">\n                          Kami dilema untuk menentukan sentimen ulasan anda.\n                          Silahkan ubah ulasan anda\n                        </div>\n                      </div>\n                    )) ||\n                    (result.result === \"uncoverage\" && (\n                      <div>\n                        <div className=\"text-3xl inline-flex space-x-4 items-center animate-bounce\">\n                          <div className=\"text-2xl\">Hasil :</div>\n                          <div className=\"font-semibold flex space-x-2 text-yellow-200\">\n                            <IoSadSharp />\n                            <span>TIDAK DIKETAHUI</span>\n                          </div>\n                        </div>\n                        <div className=\" text-sm italic text-gray-200\">\n                          Kami tidak mengenali sebagian besar ulasan anda.\n                          Silahkan ubah ulasan anda\n                        </div>\n                      </div>\n                    ))}\n                  <div className=\"mt-10 text-center\">\n                    <div>\n                      <div className=\"underline text-sm\">Raw Text</div>\n                      <div className=\"text-sm italic text-gray-200\">\n                        {result.original}\n                      </div>\n                      <div className=\"text-xs text-yellow-300 font-semibold\">\n                        ({result.original.split(\" \").length} words)\n                      </div>\n                    </div>\n                    <GoArrowDown className=\"mx-auto text-2xl\" />\n                    <div>\n                      <div className=\"underline text-sm\">Processed Text</div>\n                      <div className=\"text-sm italic text-gray-200\">\n                        {result.processed}\n                      </div>\n                      <div className=\"text-xs text-yellow-300 font-semibold\">\n                        ({result.processed.split(\" \").length} words)\n                      </div>\n                    </div>\n                    <GoArrowDown className=\"mx-auto text-2xl\" />\n                    <div>\n                      <div className=\"underline text-sm\">\n                        Tokenized Sequences\n                      </div>\n                      <div className=\"text-sm italic text-gray-200\">\n                        [{result.tokenized.join(\", \")}]\n                      </div>\n                      <div className=\"text-xs text-yellow-300 font-semibold\">\n                        (\n                        {Math.round(\n                          (result.tokenized.length /\n                            (result.processed.split(\" \").length || 1)) *\n                            100\n                        )}\n                        % coverage)\n                      </div>\n                    </div>\n                    <GoArrowDown className=\"mx-auto text-2xl\" />\n                    <div>\n                      <div className=\"underline text-sm\">\n                        Classification Result\n                      </div>\n                      <div className=\"text-sm italic text-gray-200\">\n                        [{result.classification.join(\", \")}]\n                      </div>\n                    </div>\n                    <div className=\"text-xs text-yellow-300 font-semibold\">\n                      (negative, positive)\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </form>\n        </div>\n        <div className=\"mx-auto text-5xl flex space-x-1 pb-4\">\n          <button\n            type=\"button\"\n            onClick={() => setInfo(true)}\n            className=\"opacity-60 hover:opacity-100 transition-opacity duration-200 \"\n          >\n            <HiInformationCircle />\n          </button>\n          <a\n            href=\"https://github.com/aldipermanaetikaputra/product-review-classification\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"opacity-60 hover:opacity-100 transition-opacity duration-200 \"\n          >\n            <RiGithubFill />\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}